#!/usr/bin/env ruby

# load ncurses
require 'ncurses'

# default config
$config = {
  'config_path'   => ENV['HOME'] << '.raggle/config.rb',

  # debugging options (don't touch)
  'use_raw_mode'  => true,
  'use_noecho'    => true,
}

# parse command-line options
# TODO

# load user config ($HOME/.raggle/config.rb)
load $config['config_path'], false if test ?e, $config['config_path']

# draw a dialog on the screen
def dialog(title, str)
  y = ($config['h'] - 4) / 2
  x = ($config['x'] - str.length - 4) / 2
end

begin
  # initialize screen & keyboard
  Ncurses::initscr
  Ncurses::raw if $config['use_raw_mode']
  Ncurses::keypad Ncurses::stdscr, 1
  Ncurses::noecho if $config['use_noecho']

  # print exit message
  Ncurses::printw 'Press F12 or Q to exit.'

  # get screen coordinates
  h = []; w = []
  Ncurses::getmaxyx Ncurses::stdscr, h, w
  $config['w'] = w[0]
  $config['h'] = h[0]

  # print test message in center of screen
  msg = "Screen size: #{w[0]}x#{h[0]}"
  Ncurses::mvprintw h[0] / 2, (w[0] - msg.length) / 2, msg
  
  # create new window
  wy, wx, wh, ww = 5, 5, 10, 10
  win = Ncurses::newwin wh, ww, wy, wx
  Ncurses::box win, 0, 0
  Ncurses::mvwprintw win, 1, 1, 'asdf'
  Ncurses::wrefresh win

  # main loop
  done = false
  while !done
    oy, ox = wy, wx

    # handle keyboard input
    case c = Ncurses::getch
    when Ncurses::KEY_UP
      puts 'up'
      wy -= 1
    when Ncurses::KEY_DOWN
      puts 'down'
      wy += 1
    when Ncurses::KEY_LEFT
      puts 'left'
      wx -= 1
    when Ncurses::KEY_RIGHT
      puts 'right'
      wx += 1
    when Ncurses::KEY_F12
      done = true
    when ?q
      done = true
    end

    # check to see if the window needs to be moved
    if oy != wy || ox != wx
      Ncurses::mvwin win, wy, wx
      Ncurses::wrefresh win
    end

    # refresh screen (is this necessary?)
    Ncurses::refresh # Ncurses::stdscr
  end
ensure
  # make sure the screen gets cleaned up on exit
  Ncurses::endwin
end
